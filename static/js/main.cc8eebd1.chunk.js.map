{"version":3,"sources":["types/types.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","onSelectedTodo","selectedTodo","className","map","id","title","completed","cn","type","onClick","TodoFilter","setStatusSelect","setQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setClose","userId","useState","user","setUser","useEffect","getUser","users","href","email","name","App","setTodos","setSelectedTodo","isLoading","setIsLoading","statusSelect","searchByInput","todoTitle","searchInput","toLowerCase","includes","todo","filteredTodos","filter","Error","todoId","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc8eebd1.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectedTodo: (id: number) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': completed,\n                'has-text-danget': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                className=\"button\"\n                data-cy=\"selectButton\"\n                type=\"button\"\n                onClick={() => onSelectedTodo(id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    { 'fa-eye': selectedTodo?.id !== id },\n                    { 'fa-eye-slash': selectedTodo?.id === id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Status } from '../../types/types';\n\ntype Props = {\n  setStatusSelect: (item: string) => void;\n  setQuery: (item: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setStatusSelect,\n  setQuery,\n  query,\n}) => {\n  const clearInput = () => {\n    setQuery('');\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatusSelect(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusSelect}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Clear search input\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  setClose: (item: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setClose,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(users => {\n      setUser(users);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport { Status } from './types/types';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [statusSelect, setStatusSelect] = useState('all');\n\n  const onTodoSelection = (todoId: number) => {\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const searchByInput = (todoTitle: string, searchInput: string) => {\n    return todoTitle.toLowerCase().includes(searchInput.toLowerCase());\n  };\n\n  useEffect(() => {\n    getTodos().then(todo => {\n      setTodos(todo);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const filteredTodos = todos.filter(({ title, completed }) => {\n    switch (statusSelect) {\n      case Status.ALL:\n        return searchByInput(title, query);\n\n      case Status.ACTIVE:\n        return !completed && searchByInput(title, query);\n\n      case Status.COMPLETED:\n        return completed && searchByInput(title, query);\n\n      default:\n        throw new Error('Oops! Something went wrong!');\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setStatusSelect={setStatusSelect}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  onSelectedTodo={onTodoSelection}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} setClose={handleModalClose} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}